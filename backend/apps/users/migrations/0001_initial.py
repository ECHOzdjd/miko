# Generated by Django 4.2.7 on 2025-10-14 02:54

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import imagekit.models.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='邮箱')),
                ('phone', models.CharField(blank=True, max_length=11, null=True, verbose_name='手机号')),
                ('nickname', models.CharField(max_length=50, unique=True, verbose_name='昵称')),
                ('avatar', imagekit.models.fields.ProcessedImageField(blank=True, null=True, upload_to='avatars/', verbose_name='头像')),
                ('background_image', imagekit.models.fields.ProcessedImageField(blank=True, null=True, upload_to='backgrounds/', verbose_name='背景图')),
                ('signature', models.TextField(blank=True, max_length=200, verbose_name='个人签名')),
                ('bio', models.TextField(blank=True, max_length=500, verbose_name='个人简介')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='生日')),
                ('gender', models.CharField(blank=True, choices=[('male', '男'), ('female', '女'), ('other', '其他')], max_length=10, verbose_name='性别')),
                ('location', models.CharField(blank=True, max_length=100, verbose_name='所在地')),
                ('website', models.URLField(blank=True, verbose_name='个人网站')),
                ('is_verified', models.BooleanField(default=False, verbose_name='是否认证')),
                ('is_premium', models.BooleanField(default=False, verbose_name='是否会员')),
                ('followers_count', models.PositiveIntegerField(default=0, verbose_name='粉丝数')),
                ('following_count', models.PositiveIntegerField(default=0, verbose_name='关注数')),
                ('posts_count', models.PositiveIntegerField(default=0, verbose_name='帖子数')),
                ('likes_received', models.PositiveIntegerField(default=0, verbose_name='获赞数')),
                ('last_active', models.DateTimeField(default=django.utils.timezone.now, verbose_name='最后活跃时间')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': '用户',
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interests', models.JSONField(default=list, verbose_name='兴趣爱好')),
                ('favorite_anime', models.JSONField(default=list, verbose_name='喜欢的动漫')),
                ('favorite_manga', models.JSONField(default=list, verbose_name='喜欢的漫画')),
                ('favorite_games', models.JSONField(default=list, verbose_name='喜欢的游戏')),
                ('social_links', models.JSONField(default=dict, verbose_name='社交链接')),
                ('privacy_settings', models.JSONField(default=dict, verbose_name='隐私设置')),
                ('notification_settings', models.JSONField(default=dict, verbose_name='通知设置')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '用户资料',
                'verbose_name_plural': '用户资料',
                'db_table': 'user_profiles',
            },
        ),
        migrations.CreateModel(
            name='UserFollow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='关注时间')),
                ('follower', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='following_relations', to=settings.AUTH_USER_MODEL, verbose_name='关注者')),
                ('following', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='follower_relations', to=settings.AUTH_USER_MODEL, verbose_name='被关注者')),
            ],
            options={
                'verbose_name': '用户关注',
                'verbose_name_plural': '用户关注',
                'db_table': 'user_follows',
                'unique_together': {('follower', 'following')},
            },
        ),
        migrations.CreateModel(
            name='UserBlock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='屏蔽时间')),
                ('blocked', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blocked_relations', to=settings.AUTH_USER_MODEL, verbose_name='被屏蔽者')),
                ('blocker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blocking_relations', to=settings.AUTH_USER_MODEL, verbose_name='屏蔽者')),
            ],
            options={
                'verbose_name': '用户屏蔽',
                'verbose_name_plural': '用户屏蔽',
                'db_table': 'user_blocks',
                'unique_together': {('blocker', 'blocked')},
            },
        ),
    ]
