# Generated by Django 4.2.7 on 2025-10-14 06:41

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='标题')),
                ('content', models.TextField(verbose_name='内容')),
                ('post_type', models.CharField(choices=[('text', '纯文本'), ('image', '图文'), ('video', '视频'), ('article', '文章')], default='text', max_length=20, verbose_name='帖子类型')),
                ('status', models.CharField(choices=[('draft', '草稿'), ('published', '已发布'), ('hidden', '隐藏'), ('deleted', '已删除')], default='published', max_length=20, verbose_name='状态')),
                ('tags', models.JSONField(default=list, verbose_name='标签')),
                ('images', models.JSONField(default=list, verbose_name='图片列表')),
                ('video_url', models.URLField(blank=True, verbose_name='视频链接')),
                ('video_thumbnail', models.URLField(blank=True, verbose_name='视频缩略图')),
                ('views_count', models.PositiveIntegerField(default=0, verbose_name='浏览数')),
                ('likes_count', models.PositiveIntegerField(default=0, verbose_name='点赞数')),
                ('comments_count', models.PositiveIntegerField(default=0, verbose_name='评论数')),
                ('shares_count', models.PositiveIntegerField(default=0, verbose_name='分享数')),
                ('bookmarks_count', models.PositiveIntegerField(default=0, verbose_name='收藏数')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('published_at', models.DateTimeField(blank=True, null=True, verbose_name='发布时间')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to=settings.AUTH_USER_MODEL, verbose_name='作者')),
            ],
            options={
                'verbose_name': '帖子',
                'verbose_name_plural': '帖子',
                'db_table': 'posts',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PostShare',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platform', models.CharField(max_length=50, verbose_name='分享平台')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='分享时间')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='share_users', to='posts.post', verbose_name='帖子')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shares', to=settings.AUTH_USER_MODEL, verbose_name='分享者')),
            ],
            options={
                'verbose_name': '帖子分享',
                'verbose_name_plural': '帖子分享',
                'db_table': 'post_shares',
            },
        ),
        migrations.CreateModel(
            name='PostReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_type', models.CharField(choices=[('spam', '垃圾信息'), ('inappropriate', '不当内容'), ('harassment', '骚扰'), ('violence', '暴力'), ('hate_speech', '仇恨言论'), ('fake_news', '虚假信息'), ('other', '其他')], max_length=20, verbose_name='举报类型')),
                ('reason', models.TextField(verbose_name='举报原因')),
                ('status', models.CharField(choices=[('pending', '待处理'), ('reviewing', '审核中'), ('resolved', '已处理'), ('dismissed', '已驳回')], default='pending', max_length=20, verbose_name='处理状态')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='举报时间')),
                ('resolved_at', models.DateTimeField(blank=True, null=True, verbose_name='处理时间')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='posts.post', verbose_name='被举报帖子')),
                ('reporter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports_made', to=settings.AUTH_USER_MODEL, verbose_name='举报者')),
            ],
            options={
                'verbose_name': '帖子举报',
                'verbose_name_plural': '帖子举报',
                'db_table': 'post_reports',
            },
        ),
        migrations.CreateModel(
            name='PostImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='posts/images/', verbose_name='图片')),
                ('caption', models.CharField(blank=True, max_length=200, verbose_name='图片说明')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='排序')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='post_images', to='posts.post', verbose_name='帖子')),
            ],
            options={
                'verbose_name': '帖子图片',
                'verbose_name_plural': '帖子图片',
                'db_table': 'post_images',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='PostBookmark',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='收藏时间')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookmark_users', to='posts.post', verbose_name='帖子')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookmarks', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '帖子收藏',
                'verbose_name_plural': '帖子收藏',
                'db_table': 'post_bookmarks',
                'unique_together': {('user', 'post')},
            },
        ),
    ]
