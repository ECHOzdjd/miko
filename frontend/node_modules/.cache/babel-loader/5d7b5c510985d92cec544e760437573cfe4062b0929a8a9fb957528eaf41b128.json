{"ast":null,"code":"import apiClient from'./client';export const postsApi={// 获取帖子列表\ngetPosts:async function(){var _filters$tags;let filters=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const params=new URLSearchParams();if(filters.post_type)params.append('post_type',filters.post_type);if(filters.circle_id)params.append('circle_id',filters.circle_id.toString());if(filters.author_id)params.append('author_id',filters.author_id.toString());if((_filters$tags=filters.tags)!==null&&_filters$tags!==void 0&&_filters$tags.length)params.append('tags',filters.tags.join(','));if(filters.search)params.append('search',filters.search);if(filters.ordering)params.append('ordering',filters.ordering);const response=await apiClient.get(\"/posts/?\".concat(params.toString()));return response.data;},// 获取帖子详情\ngetPost:async postId=>{const response=await apiClient.get(\"/posts/\".concat(postId,\"/\"));return response.data;},// 创建帖子\ncreatePost:async data=>{const formData=new FormData();formData.append('title',data.title);formData.append('content',data.content);formData.append('post_type',data.post_type);formData.append('tags',JSON.stringify(data.tags));if(data.circle_id){formData.append('circle_id',data.circle_id.toString());}data.images.forEach((image,index)=>{formData.append(\"images\",image);});const response=await apiClient.post('/posts/',formData,{headers:{'Content-Type':'multipart/form-data'}});return response.data;},// 更新帖子\nupdatePost:async(postId,data)=>{const response=await apiClient.patch(\"/posts/\".concat(postId,\"/\"),data);return response.data;},// 删除帖子\ndeletePost:async postId=>{await apiClient.delete(\"/posts/\".concat(postId,\"/\"));},// 点赞帖子\nlikePost:async postId=>{await apiClient.post(\"/posts/\".concat(postId,\"/like/\"));},// 取消点赞帖子\nunlikePost:async postId=>{await apiClient.delete(\"/posts/\".concat(postId,\"/like/\"));},// 收藏帖子\nbookmarkPost:async postId=>{await apiClient.post(\"/posts/\".concat(postId,\"/bookmark/\"));},// 取消收藏帖子\nunbookmarkPost:async postId=>{await apiClient.delete(\"/posts/\".concat(postId,\"/bookmark/\"));},// 分享帖子\nsharePost:async(postId,platform)=>{await apiClient.post(\"/posts/\".concat(postId,\"/share/\"),{platform});},// 举报帖子\nreportPost:async(postId,reportType,reason)=>{await apiClient.post(\"/posts/\".concat(postId,\"/report/\"),{report_type:reportType,reason});},// 获取热门帖子\ngetTrendingPosts:async()=>{const response=await apiClient.get('/posts/trending/');return response.data;},// 获取推荐帖子\ngetRecommendedPosts:async()=>{const response=await apiClient.get('/posts/recommended/');return response.data;}};","map":{"version":3,"names":["apiClient","postsApi","getPosts","_filters$tags","filters","arguments","length","undefined","params","URLSearchParams","post_type","append","circle_id","toString","author_id","tags","join","search","ordering","response","get","concat","data","getPost","postId","createPost","formData","FormData","title","content","JSON","stringify","images","forEach","image","index","post","headers","updatePost","patch","deletePost","delete","likePost","unlikePost","bookmarkPost","unbookmarkPost","sharePost","platform","reportPost","reportType","reason","report_type","getTrendingPosts","getRecommendedPosts"],"sources":["D:/miko/frontend/src/api/posts.ts"],"sourcesContent":["import apiClient from './client';\r\nimport { Post, CreatePostRequest, PostFilters } from '../types/post';\r\n\r\nexport const postsApi = {\r\n  // 获取帖子列表\r\n  getPosts: async (filters: PostFilters = {}): Promise<{ results: Post[]; count: number; next: string | null }> => {\r\n    const params = new URLSearchParams();\r\n    \r\n    if (filters.post_type) params.append('post_type', filters.post_type);\r\n    if (filters.circle_id) params.append('circle_id', filters.circle_id.toString());\r\n    if (filters.author_id) params.append('author_id', filters.author_id.toString());\r\n    if (filters.tags?.length) params.append('tags', filters.tags.join(','));\r\n    if (filters.search) params.append('search', filters.search);\r\n    if (filters.ordering) params.append('ordering', filters.ordering);\r\n    \r\n    const response = await apiClient.get(`/posts/?${params.toString()}`);\r\n    return response.data;\r\n  },\r\n\r\n  // 获取帖子详情\r\n  getPost: async (postId: number): Promise<Post> => {\r\n    const response = await apiClient.get(`/posts/${postId}/`);\r\n    return response.data;\r\n  },\r\n\r\n  // 创建帖子\r\n  createPost: async (data: CreatePostRequest): Promise<Post> => {\r\n    const formData = new FormData();\r\n    formData.append('title', data.title);\r\n    formData.append('content', data.content);\r\n    formData.append('post_type', data.post_type);\r\n    formData.append('tags', JSON.stringify(data.tags));\r\n    \r\n    if (data.circle_id) {\r\n      formData.append('circle_id', data.circle_id.toString());\r\n    }\r\n    \r\n    data.images.forEach((image, index) => {\r\n      formData.append(`images`, image);\r\n    });\r\n    \r\n    const response = await apiClient.post('/posts/', formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n    return response.data;\r\n  },\r\n\r\n  // 更新帖子\r\n  updatePost: async (postId: number, data: Partial<CreatePostRequest>): Promise<Post> => {\r\n    const response = await apiClient.patch(`/posts/${postId}/`, data);\r\n    return response.data;\r\n  },\r\n\r\n  // 删除帖子\r\n  deletePost: async (postId: number): Promise<void> => {\r\n    await apiClient.delete(`/posts/${postId}/`);\r\n  },\r\n\r\n  // 点赞帖子\r\n  likePost: async (postId: number): Promise<void> => {\r\n    await apiClient.post(`/posts/${postId}/like/`);\r\n  },\r\n\r\n  // 取消点赞帖子\r\n  unlikePost: async (postId: number): Promise<void> => {\r\n    await apiClient.delete(`/posts/${postId}/like/`);\r\n  },\r\n\r\n  // 收藏帖子\r\n  bookmarkPost: async (postId: number): Promise<void> => {\r\n    await apiClient.post(`/posts/${postId}/bookmark/`);\r\n  },\r\n\r\n  // 取消收藏帖子\r\n  unbookmarkPost: async (postId: number): Promise<void> => {\r\n    await apiClient.delete(`/posts/${postId}/bookmark/`);\r\n  },\r\n\r\n  // 分享帖子\r\n  sharePost: async (postId: number, platform: string): Promise<void> => {\r\n    await apiClient.post(`/posts/${postId}/share/`, { platform });\r\n  },\r\n\r\n  // 举报帖子\r\n  reportPost: async (postId: number, reportType: string, reason: string): Promise<void> => {\r\n    await apiClient.post(`/posts/${postId}/report/`, {\r\n      report_type: reportType,\r\n      reason,\r\n    });\r\n  },\r\n\r\n  // 获取热门帖子\r\n  getTrendingPosts: async (): Promise<Post[]> => {\r\n    const response = await apiClient.get('/posts/trending/');\r\n    return response.data;\r\n  },\r\n\r\n  // 获取推荐帖子\r\n  getRecommendedPosts: async (): Promise<Post[]> => {\r\n    const response = await apiClient.get('/posts/recommended/');\r\n    return response.data;\r\n  },\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}