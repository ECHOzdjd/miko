{"ast":null,"code":"import _objectSpread from\"D:/miko/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{create}from'zustand';// 从localStorage加载初始状态\nconst loadState=()=>{try{const serializedState=localStorage.getItem('auth-storage');if(serializedState===null){return{};}return JSON.parse(serializedState);}catch(err){return{};}};// 保存状态到localStorage\nconst saveState=state=>{try{const serializedState=JSON.stringify({user:state.user,token:state.token,isAuthenticated:state.isAuthenticated});localStorage.setItem('auth-storage',serializedState);}catch(_unused){// ignore write errors\n}};const initialState=loadState();export const useAuthStore=create((set,get)=>({user:initialState.user||null,token:initialState.token||null,isAuthenticated:initialState.isAuthenticated||false,isLoading:false,login:(user,token)=>{const newState={user,token,isAuthenticated:true,isLoading:false};set(newState);saveState(get());},logout:()=>{const newState={user:null,token:null,isAuthenticated:false,isLoading:false};set(newState);saveState(get());},updateUser:userData=>{const currentUser=get().user;if(currentUser){set({user:_objectSpread(_objectSpread({},currentUser),userData)});saveState(get());}},setLoading:loading=>{set({isLoading:loading});}}));","map":{"version":3,"names":["create","loadState","serializedState","localStorage","getItem","JSON","parse","err","saveState","state","stringify","user","token","isAuthenticated","setItem","_unused","initialState","useAuthStore","set","get","isLoading","login","newState","logout","updateUser","userData","currentUser","_objectSpread","setLoading","loading"],"sources":["D:/miko/frontend/src/stores/authStore.ts"],"sourcesContent":["import { create } from 'zustand';\r\nimport { User } from '../types/user';\r\n\r\ninterface AuthState {\r\n  user: User | null;\r\n  token: string | null;\r\n  isAuthenticated: boolean;\r\n  isLoading: boolean;\r\n  login: (user: User, token: string) => void;\r\n  logout: () => void;\r\n  updateUser: (user: Partial<User>) => void;\r\n  setLoading: (loading: boolean) => void;\r\n}\r\n\r\n// 从localStorage加载初始状态\r\nconst loadState = (): Partial<AuthState> => {\r\n  try {\r\n    const serializedState = localStorage.getItem('auth-storage');\r\n    if (serializedState === null) {\r\n      return {};\r\n    }\r\n    return JSON.parse(serializedState);\r\n  } catch (err) {\r\n    return {};\r\n  }\r\n};\r\n\r\n// 保存状态到localStorage\r\nconst saveState = (state: AuthState) => {\r\n  try {\r\n    const serializedState = JSON.stringify({\r\n      user: state.user,\r\n      token: state.token,\r\n      isAuthenticated: state.isAuthenticated,\r\n    });\r\n    localStorage.setItem('auth-storage', serializedState);\r\n  } catch {\r\n    // ignore write errors\r\n  }\r\n};\r\n\r\nconst initialState = loadState();\r\n\r\nexport const useAuthStore = create<AuthState>((set, get) => ({\r\n  user: initialState.user || null,\r\n  token: initialState.token || null,\r\n  isAuthenticated: initialState.isAuthenticated || false,\r\n  isLoading: false,\r\n  \r\n  login: (user: User, token: string) => {\r\n    const newState = {\r\n      user,\r\n      token,\r\n      isAuthenticated: true,\r\n      isLoading: false,\r\n    };\r\n    set(newState);\r\n    saveState(get());\r\n  },\r\n  \r\n  logout: () => {\r\n    const newState = {\r\n      user: null,\r\n      token: null,\r\n      isAuthenticated: false,\r\n      isLoading: false,\r\n    };\r\n    set(newState);\r\n    saveState(get());\r\n  },\r\n  \r\n  updateUser: (userData: Partial<User>) => {\r\n    const currentUser = get().user;\r\n    if (currentUser) {\r\n      set({\r\n        user: { ...currentUser, ...userData },\r\n      });\r\n      saveState(get());\r\n    }\r\n  },\r\n  \r\n  setLoading: (loading: boolean) => {\r\n    set({ isLoading: loading });\r\n  },\r\n}));\r\n"],"mappings":"qGAAA,OAASA,MAAM,KAAQ,SAAS,CAchC;AACA,KAAM,CAAAC,SAAS,CAAGA,CAAA,GAA0B,CAC1C,GAAI,CACF,KAAM,CAAAC,eAAe,CAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,CAC5D,GAAIF,eAAe,GAAK,IAAI,CAAE,CAC5B,MAAO,CAAC,CAAC,CACX,CACA,MAAO,CAAAG,IAAI,CAACC,KAAK,CAACJ,eAAe,CAAC,CACpC,CAAE,MAAOK,GAAG,CAAE,CACZ,MAAO,CAAC,CAAC,CACX,CACF,CAAC,CAED;AACA,KAAM,CAAAC,SAAS,CAAIC,KAAgB,EAAK,CACtC,GAAI,CACF,KAAM,CAAAP,eAAe,CAAGG,IAAI,CAACK,SAAS,CAAC,CACrCC,IAAI,CAAEF,KAAK,CAACE,IAAI,CAChBC,KAAK,CAAEH,KAAK,CAACG,KAAK,CAClBC,eAAe,CAAEJ,KAAK,CAACI,eACzB,CAAC,CAAC,CACFV,YAAY,CAACW,OAAO,CAAC,cAAc,CAAEZ,eAAe,CAAC,CACvD,CAAE,MAAAa,OAAA,CAAM,CACN;AAAA,CAEJ,CAAC,CAED,KAAM,CAAAC,YAAY,CAAGf,SAAS,CAAC,CAAC,CAEhC,MAAO,MAAM,CAAAgB,YAAY,CAAGjB,MAAM,CAAY,CAACkB,GAAG,CAAEC,GAAG,IAAM,CAC3DR,IAAI,CAAEK,YAAY,CAACL,IAAI,EAAI,IAAI,CAC/BC,KAAK,CAAEI,YAAY,CAACJ,KAAK,EAAI,IAAI,CACjCC,eAAe,CAAEG,YAAY,CAACH,eAAe,EAAI,KAAK,CACtDO,SAAS,CAAE,KAAK,CAEhBC,KAAK,CAAEA,CAACV,IAAU,CAAEC,KAAa,GAAK,CACpC,KAAM,CAAAU,QAAQ,CAAG,CACfX,IAAI,CACJC,KAAK,CACLC,eAAe,CAAE,IAAI,CACrBO,SAAS,CAAE,KACb,CAAC,CACDF,GAAG,CAACI,QAAQ,CAAC,CACbd,SAAS,CAACW,GAAG,CAAC,CAAC,CAAC,CAClB,CAAC,CAEDI,MAAM,CAAEA,CAAA,GAAM,CACZ,KAAM,CAAAD,QAAQ,CAAG,CACfX,IAAI,CAAE,IAAI,CACVC,KAAK,CAAE,IAAI,CACXC,eAAe,CAAE,KAAK,CACtBO,SAAS,CAAE,KACb,CAAC,CACDF,GAAG,CAACI,QAAQ,CAAC,CACbd,SAAS,CAACW,GAAG,CAAC,CAAC,CAAC,CAClB,CAAC,CAEDK,UAAU,CAAGC,QAAuB,EAAK,CACvC,KAAM,CAAAC,WAAW,CAAGP,GAAG,CAAC,CAAC,CAACR,IAAI,CAC9B,GAAIe,WAAW,CAAE,CACfR,GAAG,CAAC,CACFP,IAAI,CAAAgB,aAAA,CAAAA,aAAA,IAAOD,WAAW,EAAKD,QAAQ,CACrC,CAAC,CAAC,CACFjB,SAAS,CAACW,GAAG,CAAC,CAAC,CAAC,CAClB,CACF,CAAC,CAEDS,UAAU,CAAGC,OAAgB,EAAK,CAChCX,GAAG,CAAC,CAAEE,SAAS,CAAES,OAAQ,CAAC,CAAC,CAC7B,CACF,CAAC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}