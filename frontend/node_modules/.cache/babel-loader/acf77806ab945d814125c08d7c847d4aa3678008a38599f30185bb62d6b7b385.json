{"ast":null,"code":"import apiClient from './client';\nexport const authApi = {\n  // 用户注册\n  register: async data => {\n    const response = await apiClient.post('/users/register/', data);\n    return response.data;\n  },\n  // 用户登录\n  login: async data => {\n    const response = await apiClient.post('/users/login/', data);\n    return response.data;\n  },\n  // 用户登出\n  logout: async () => {\n    await apiClient.post('/users/logout/');\n  },\n  // 获取当前用户信息\n  getCurrentUser: async () => {\n    const response = await apiClient.get('/users/me/');\n    return response.data;\n  },\n  // 更新用户信息\n  updateUser: async data => {\n    const response = await apiClient.patch('/users/me/', data);\n    return response.data;\n  },\n  // 获取用户详情\n  getUser: async userId => {\n    const response = await apiClient.get(`/users/${userId}/`);\n    return response.data;\n  },\n  // 关注用户\n  followUser: async userId => {\n    await apiClient.post('/users/follows/follow/', {\n      user_id: userId\n    });\n  },\n  // 取消关注用户\n  unfollowUser: async userId => {\n    await apiClient.post('/users/follows/unfollow/', {\n      user_id: userId\n    });\n  },\n  // 获取用户粉丝列表\n  getUserFollowers: async (userId, page = 1) => {\n    const response = await apiClient.get(`/users/${userId}/followers/?page=${page}`);\n    return response.data;\n  },\n  // 获取用户关注列表\n  getUserFollowing: async (userId, page = 1) => {\n    const response = await apiClient.get(`/users/${userId}/following/?page=${page}`);\n    return response.data;\n  }\n};","map":{"version":3,"names":["apiClient","authApi","register","data","response","post","login","logout","getCurrentUser","get","updateUser","patch","getUser","userId","followUser","user_id","unfollowUser","getUserFollowers","page","getUserFollowing"],"sources":["D:/miko/frontend/src/api/auth.ts"],"sourcesContent":["import apiClient from './client';\r\nimport { LoginRequest, RegisterRequest, AuthResponse, User } from '../types/user';\r\n\r\nexport const authApi = {\r\n  // 用户注册\r\n  register: async (data: RegisterRequest): Promise<AuthResponse> => {\r\n    const response = await apiClient.post('/users/register/', data);\r\n    return response.data;\r\n  },\r\n\r\n  // 用户登录\r\n  login: async (data: LoginRequest): Promise<AuthResponse> => {\r\n    const response = await apiClient.post('/users/login/', data);\r\n    return response.data;\r\n  },\r\n\r\n  // 用户登出\r\n  logout: async (): Promise<void> => {\r\n    await apiClient.post('/users/logout/');\r\n  },\r\n\r\n  // 获取当前用户信息\r\n  getCurrentUser: async (): Promise<User> => {\r\n    const response = await apiClient.get('/users/me/');\r\n    return response.data;\r\n  },\r\n\r\n  // 更新用户信息\r\n  updateUser: async (data: Partial<User>): Promise<User> => {\r\n    const response = await apiClient.patch('/users/me/', data);\r\n    return response.data;\r\n  },\r\n\r\n  // 获取用户详情\r\n  getUser: async (userId: number): Promise<User> => {\r\n    const response = await apiClient.get(`/users/${userId}/`);\r\n    return response.data;\r\n  },\r\n\r\n  // 关注用户\r\n  followUser: async (userId: number): Promise<void> => {\r\n    await apiClient.post('/users/follows/follow/', { user_id: userId });\r\n  },\r\n\r\n  // 取消关注用户\r\n  unfollowUser: async (userId: number): Promise<void> => {\r\n    await apiClient.post('/users/follows/unfollow/', { user_id: userId });\r\n  },\r\n\r\n  // 获取用户粉丝列表\r\n  getUserFollowers: async (userId: number, page = 1): Promise<{ results: User[]; count: number }> => {\r\n    const response = await apiClient.get(`/users/${userId}/followers/?page=${page}`);\r\n    return response.data;\r\n  },\r\n\r\n  // 获取用户关注列表\r\n  getUserFollowing: async (userId: number, page = 1): Promise<{ results: User[]; count: number }> => {\r\n    const response = await apiClient.get(`/users/${userId}/following/?page=${page}`);\r\n    return response.data;\r\n  },\r\n};\r\n"],"mappings":"AAAA,OAAOA,SAAS,MAAM,UAAU;AAGhC,OAAO,MAAMC,OAAO,GAAG;EACrB;EACAC,QAAQ,EAAE,MAAOC,IAAqB,IAA4B;IAChE,MAAMC,QAAQ,GAAG,MAAMJ,SAAS,CAACK,IAAI,CAAC,kBAAkB,EAAEF,IAAI,CAAC;IAC/D,OAAOC,QAAQ,CAACD,IAAI;EACtB,CAAC;EAED;EACAG,KAAK,EAAE,MAAOH,IAAkB,IAA4B;IAC1D,MAAMC,QAAQ,GAAG,MAAMJ,SAAS,CAACK,IAAI,CAAC,eAAe,EAAEF,IAAI,CAAC;IAC5D,OAAOC,QAAQ,CAACD,IAAI;EACtB,CAAC;EAED;EACAI,MAAM,EAAE,MAAAA,CAAA,KAA2B;IACjC,MAAMP,SAAS,CAACK,IAAI,CAAC,gBAAgB,CAAC;EACxC,CAAC;EAED;EACAG,cAAc,EAAE,MAAAA,CAAA,KAA2B;IACzC,MAAMJ,QAAQ,GAAG,MAAMJ,SAAS,CAACS,GAAG,CAAC,YAAY,CAAC;IAClD,OAAOL,QAAQ,CAACD,IAAI;EACtB,CAAC;EAED;EACAO,UAAU,EAAE,MAAOP,IAAmB,IAAoB;IACxD,MAAMC,QAAQ,GAAG,MAAMJ,SAAS,CAACW,KAAK,CAAC,YAAY,EAAER,IAAI,CAAC;IAC1D,OAAOC,QAAQ,CAACD,IAAI;EACtB,CAAC;EAED;EACAS,OAAO,EAAE,MAAOC,MAAc,IAAoB;IAChD,MAAMT,QAAQ,GAAG,MAAMJ,SAAS,CAACS,GAAG,CAAC,UAAUI,MAAM,GAAG,CAAC;IACzD,OAAOT,QAAQ,CAACD,IAAI;EACtB,CAAC;EAED;EACAW,UAAU,EAAE,MAAOD,MAAc,IAAoB;IACnD,MAAMb,SAAS,CAACK,IAAI,CAAC,wBAAwB,EAAE;MAAEU,OAAO,EAAEF;IAAO,CAAC,CAAC;EACrE,CAAC;EAED;EACAG,YAAY,EAAE,MAAOH,MAAc,IAAoB;IACrD,MAAMb,SAAS,CAACK,IAAI,CAAC,0BAA0B,EAAE;MAAEU,OAAO,EAAEF;IAAO,CAAC,CAAC;EACvE,CAAC;EAED;EACAI,gBAAgB,EAAE,MAAAA,CAAOJ,MAAc,EAAEK,IAAI,GAAG,CAAC,KAAkD;IACjG,MAAMd,QAAQ,GAAG,MAAMJ,SAAS,CAACS,GAAG,CAAC,UAAUI,MAAM,oBAAoBK,IAAI,EAAE,CAAC;IAChF,OAAOd,QAAQ,CAACD,IAAI;EACtB,CAAC;EAED;EACAgB,gBAAgB,EAAE,MAAAA,CAAON,MAAc,EAAEK,IAAI,GAAG,CAAC,KAAkD;IACjG,MAAMd,QAAQ,GAAG,MAAMJ,SAAS,CAACS,GAAG,CAAC,UAAUI,MAAM,oBAAoBK,IAAI,EAAE,CAAC;IAChF,OAAOd,QAAQ,CAACD,IAAI;EACtB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}