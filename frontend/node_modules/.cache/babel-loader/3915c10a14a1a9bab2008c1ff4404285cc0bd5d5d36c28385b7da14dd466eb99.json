{"ast":null,"code":"import apiClient from './client';\nexport const authApi = {\n  // 用户注册\n  register: async data => {\n    const response = await apiClient.post('/users/register/', data);\n    return response.data;\n  },\n  // 用户登录\n  login: async data => {\n    const response = await apiClient.post('/users/login/', data);\n    return response.data;\n  },\n  // 用户登出\n  logout: async () => {\n    await apiClient.post('/users/logout/');\n  },\n  // 获取当前用户信息\n  getCurrentUser: async () => {\n    const response = await apiClient.get('/users/me/');\n    return response.data;\n  },\n  // 更新用户信息\n  updateUser: async data => {\n    const response = await apiClient.patch('/users/me/', data);\n    return response.data;\n  },\n  // 上传头像\n  uploadAvatar: async file => {\n    const formData = new FormData();\n    formData.append('avatar', file);\n    const response = await apiClient.patch('/users/me/', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  },\n  // 获取用户详情\n  getUser: async userId => {\n    const response = await apiClient.get(`/users/${userId}/`);\n    return response.data;\n  },\n  // 获取用户发布的帖子\n  getUserPosts: async (userId, page = 1) => {\n    const response = await apiClient.get(`/users/${userId}/posts/?page=${page}`);\n    return response.data;\n  },\n  // 获取用户点赞的帖子\n  getUserLikedPosts: async (userId, page = 1) => {\n    const response = await apiClient.get(`/users/${userId}/liked-posts/?page=${page}`);\n    return response.data;\n  },\n  // 获取用户收藏的帖子\n  getUserBookmarkedPosts: async (page = 1) => {\n    const response = await apiClient.get(`/users/bookmarked-posts/?page=${page}`);\n    return response.data;\n  },\n  // 关注用户\n  followUser: async userId => {\n    await apiClient.post('/users/follows/follow/', {\n      user_id: userId\n    });\n  },\n  // 取消关注用户\n  unfollowUser: async userId => {\n    await apiClient.post('/users/follows/unfollow/', {\n      user_id: userId\n    });\n  },\n  // 获取用户粉丝列表\n  getUserFollowers: async (userId, page = 1) => {\n    const response = await apiClient.get(`/users/${userId}/followers/?page=${page}`);\n    return response.data;\n  },\n  // 获取用户关注列表\n  getUserFollowing: async (userId, page = 1) => {\n    const response = await apiClient.get(`/users/${userId}/following/?page=${page}`);\n    return response.data;\n  }\n};","map":{"version":3,"names":["apiClient","authApi","register","data","response","post","login","logout","getCurrentUser","get","updateUser","patch","uploadAvatar","file","formData","FormData","append","headers","getUser","userId","getUserPosts","page","getUserLikedPosts","getUserBookmarkedPosts","followUser","user_id","unfollowUser","getUserFollowers","getUserFollowing"],"sources":["D:/miko/frontend/src/api/auth.ts"],"sourcesContent":["import apiClient from './client';\r\nimport { LoginRequest, RegisterRequest, AuthResponse, User } from '../types/user';\r\n\r\nexport const authApi = {\r\n  // 用户注册\r\n  register: async (data: RegisterRequest): Promise<AuthResponse> => {\r\n    const response = await apiClient.post('/users/register/', data);\r\n    return response.data;\r\n  },\r\n\r\n  // 用户登录\r\n  login: async (data: LoginRequest): Promise<AuthResponse> => {\r\n    const response = await apiClient.post('/users/login/', data);\r\n    return response.data;\r\n  },\r\n\r\n  // 用户登出\r\n  logout: async (): Promise<void> => {\r\n    await apiClient.post('/users/logout/');\r\n  },\r\n\r\n  // 获取当前用户信息\r\n  getCurrentUser: async (): Promise<User> => {\r\n    const response = await apiClient.get('/users/me/');\r\n    return response.data;\r\n  },\r\n\r\n  // 更新用户信息\r\n  updateUser: async (data: Partial<User>): Promise<User> => {\r\n    const response = await apiClient.patch('/users/me/', data);\r\n    return response.data;\r\n  },\r\n\r\n  // 上传头像\r\n  uploadAvatar: async (file: File): Promise<User> => {\r\n    const formData = new FormData();\r\n    formData.append('avatar', file);\r\n    const response = await apiClient.patch('/users/me/', formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n    return response.data;\r\n  },\r\n\r\n  // 获取用户详情\r\n  getUser: async (userId: number): Promise<User> => {\r\n    const response = await apiClient.get(`/users/${userId}/`);\r\n    return response.data;\r\n  },\r\n\r\n  // 获取用户发布的帖子\r\n  getUserPosts: async (userId: number, page = 1): Promise<{ results: any[]; count: number; next: string | null }> => {\r\n    const response = await apiClient.get(`/users/${userId}/posts/?page=${page}`);\r\n    return response.data;\r\n  },\r\n\r\n  // 获取用户点赞的帖子\r\n  getUserLikedPosts: async (userId: number, page = 1): Promise<{ results: any[]; count: number; next: string | null }> => {\r\n    const response = await apiClient.get(`/users/${userId}/liked-posts/?page=${page}`);\r\n    return response.data;\r\n  },\r\n\r\n  // 获取用户收藏的帖子\r\n  getUserBookmarkedPosts: async (page = 1): Promise<{ results: any[]; count: number; next: string | null }> => {\r\n    const response = await apiClient.get(`/users/bookmarked-posts/?page=${page}`);\r\n    return response.data;\r\n  },\r\n\r\n  // 关注用户\r\n  followUser: async (userId: number): Promise<void> => {\r\n    await apiClient.post('/users/follows/follow/', { user_id: userId });\r\n  },\r\n\r\n  // 取消关注用户\r\n  unfollowUser: async (userId: number): Promise<void> => {\r\n    await apiClient.post('/users/follows/unfollow/', { user_id: userId });\r\n  },\r\n\r\n  // 获取用户粉丝列表\r\n  getUserFollowers: async (userId: number, page = 1): Promise<{ results: User[]; count: number }> => {\r\n    const response = await apiClient.get(`/users/${userId}/followers/?page=${page}`);\r\n    return response.data;\r\n  },\r\n\r\n  // 获取用户关注列表\r\n  getUserFollowing: async (userId: number, page = 1): Promise<{ results: User[]; count: number }> => {\r\n    const response = await apiClient.get(`/users/${userId}/following/?page=${page}`);\r\n    return response.data;\r\n  },\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}