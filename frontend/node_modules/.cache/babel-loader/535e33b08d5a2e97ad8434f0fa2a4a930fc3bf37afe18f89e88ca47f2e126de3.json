{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useMutation, useQuery } from 'react-query';\nimport { useAuthStore } from '../stores/authStore';\nimport { authApi } from '../api/auth';\nimport toast from 'react-hot-toast';\nexport const useAuth = () => {\n  _s();\n  const {\n    login,\n    logout,\n    updateUser\n  } = useAuthStore();\n\n  // 登录\n  const loginMutation = useMutation({\n    mutationFn: authApi.login,\n    onSuccess: data => {\n      login(data.user, data.token);\n      toast.success('登录成功！');\n    },\n    onError: error => {\n      var _error$response, _error$response$data;\n      toast.error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || '登录失败');\n    }\n  });\n\n  // 注册\n  const registerMutation = useMutation({\n    mutationFn: authApi.register,\n    onSuccess: data => {\n      login(data.user, data.token);\n      toast.success('注册成功！');\n    },\n    onError: error => {\n      var _error$response2, _error$response2$data;\n      toast.error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || '注册失败');\n    }\n  });\n\n  // 登出\n  const logoutMutation = useMutation({\n    mutationFn: authApi.logout,\n    onSuccess: () => {\n      logout();\n      toast.success('已退出登录');\n    },\n    onError: () => {\n      // 即使API调用失败，也要清除本地状态\n      logout();\n    }\n  });\n\n  // 更新用户信息\n  const updateUserMutation = useMutation({\n    mutationFn: authApi.updateUser,\n    onSuccess: data => {\n      updateUser(data);\n      toast.success('资料更新成功！');\n    },\n    onError: error => {\n      var _error$response3, _error$response3$data;\n      toast.error(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.error) || '更新失败');\n    }\n  });\n\n  // 关注用户\n  const followUserMutation = useMutation({\n    mutationFn: authApi.followUser,\n    onSuccess: () => {\n      toast.success('关注成功！');\n    },\n    onError: error => {\n      var _error$response4, _error$response4$data;\n      toast.error(((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.error) || '关注失败');\n    }\n  });\n\n  // 取消关注用户\n  const unfollowUserMutation = useMutation({\n    mutationFn: authApi.unfollowUser,\n    onSuccess: () => {\n      toast.success('取消关注成功！');\n    },\n    onError: error => {\n      var _error$response5, _error$response5$data;\n      toast.error(((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.error) || '取消关注失败');\n    }\n  });\n  return {\n    login: loginMutation.mutate,\n    register: registerMutation.mutate,\n    logout: logoutMutation.mutate,\n    updateUser: updateUserMutation.mutate,\n    followUser: followUserMutation.mutate,\n    unfollowUser: unfollowUserMutation.mutate,\n    isLoading: loginMutation.isPending || registerMutation.isPending\n  };\n};\n\n// 获取当前用户信息的Hook\n_s(useAuth, \"4ZeINTfOysy1lPDPeJvipZgvY4Q=\", false, function () {\n  return [useAuthStore, useMutation, useMutation, useMutation, useMutation, useMutation, useMutation];\n});\nexport const useCurrentUser = () => {\n  _s2();\n  const {\n    user,\n    token,\n    isAuthenticated\n  } = useAuthStore();\n  return useQuery({\n    queryKey: ['currentUser'],\n    queryFn: authApi.getCurrentUser,\n    enabled: isAuthenticated && !!token,\n    staleTime: 5 * 60 * 1000,\n    // 5分钟\n    retry: false\n  });\n};\n_s2(useCurrentUser, \"w1wybh/lVbV/zSAbYNjUy0SIsNY=\", false, function () {\n  return [useAuthStore, useQuery];\n});","map":{"version":3,"names":["useMutation","useQuery","useAuthStore","authApi","toast","useAuth","_s","login","logout","updateUser","loginMutation","mutationFn","onSuccess","data","user","token","success","onError","error","_error$response","_error$response$data","response","registerMutation","register","_error$response2","_error$response2$data","logoutMutation","updateUserMutation","_error$response3","_error$response3$data","followUserMutation","followUser","_error$response4","_error$response4$data","unfollowUserMutation","unfollowUser","_error$response5","_error$response5$data","mutate","isLoading","isPending","useCurrentUser","_s2","isAuthenticated","queryKey","queryFn","getCurrentUser","enabled","staleTime","retry"],"sources":["D:/miko/frontend/src/hooks/useAuth.ts"],"sourcesContent":["import { useMutation, useQuery } from 'react-query';\r\nimport { useAuthStore } from '../stores/authStore';\r\nimport { authApi } from '../api/auth';\r\nimport { LoginRequest, RegisterRequest } from '../types/user';\r\nimport toast from 'react-hot-toast';\r\n\r\nexport const useAuth = () => {\r\n  const { login, logout, updateUser } = useAuthStore();\r\n\r\n  // 登录\r\n  const loginMutation = useMutation({\r\n    mutationFn: authApi.login,\r\n    onSuccess: (data) => {\r\n      login(data.user, data.token);\r\n      toast.success('登录成功！');\r\n    },\r\n    onError: (error: any) => {\r\n      toast.error(error.response?.data?.error || '登录失败');\r\n    },\r\n  });\r\n\r\n  // 注册\r\n  const registerMutation = useMutation({\r\n    mutationFn: authApi.register,\r\n    onSuccess: (data) => {\r\n      login(data.user, data.token);\r\n      toast.success('注册成功！');\r\n    },\r\n    onError: (error: any) => {\r\n      toast.error(error.response?.data?.error || '注册失败');\r\n    },\r\n  });\r\n\r\n  // 登出\r\n  const logoutMutation = useMutation({\r\n    mutationFn: authApi.logout,\r\n    onSuccess: () => {\r\n      logout();\r\n      toast.success('已退出登录');\r\n    },\r\n    onError: () => {\r\n      // 即使API调用失败，也要清除本地状态\r\n      logout();\r\n    },\r\n  });\r\n\r\n  // 更新用户信息\r\n  const updateUserMutation = useMutation({\r\n    mutationFn: authApi.updateUser,\r\n    onSuccess: (data) => {\r\n      updateUser(data);\r\n      toast.success('资料更新成功！');\r\n    },\r\n    onError: (error: any) => {\r\n      toast.error(error.response?.data?.error || '更新失败');\r\n    },\r\n  });\r\n\r\n  // 关注用户\r\n  const followUserMutation = useMutation({\r\n    mutationFn: authApi.followUser,\r\n    onSuccess: () => {\r\n      toast.success('关注成功！');\r\n    },\r\n    onError: (error: any) => {\r\n      toast.error(error.response?.data?.error || '关注失败');\r\n    },\r\n  });\r\n\r\n  // 取消关注用户\r\n  const unfollowUserMutation = useMutation({\r\n    mutationFn: authApi.unfollowUser,\r\n    onSuccess: () => {\r\n      toast.success('取消关注成功！');\r\n    },\r\n    onError: (error: any) => {\r\n      toast.error(error.response?.data?.error || '取消关注失败');\r\n    },\r\n  });\r\n\r\n  return {\r\n    login: loginMutation.mutate,\r\n    register: registerMutation.mutate,\r\n    logout: logoutMutation.mutate,\r\n    updateUser: updateUserMutation.mutate,\r\n    followUser: followUserMutation.mutate,\r\n    unfollowUser: unfollowUserMutation.mutate,\r\n    isLoading: loginMutation.isPending || registerMutation.isPending,\r\n  };\r\n};\r\n\r\n// 获取当前用户信息的Hook\r\nexport const useCurrentUser = () => {\r\n  const { user, token, isAuthenticated } = useAuthStore();\r\n\r\n  return useQuery({\r\n    queryKey: ['currentUser'],\r\n    queryFn: authApi.getCurrentUser,\r\n    enabled: isAuthenticated && !!token,\r\n    staleTime: 5 * 60 * 1000, // 5分钟\r\n    retry: false,\r\n  });\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}