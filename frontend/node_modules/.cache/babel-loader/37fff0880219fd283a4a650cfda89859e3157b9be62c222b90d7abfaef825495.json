{"ast":null,"code":"import apiClient from'./client';export const commentsApi={// 获取帖子的评论列表\ngetComments:async postId=>{const response=await apiClient.get(\"/posts/posts/\".concat(postId,\"/comments/\"));return response.data.results||response.data;// 处理分页响应\n},// 创建评论\ncreateComment:async(postId,data)=>{const response=await apiClient.post(\"/posts/posts/\".concat(postId,\"/comments/\"),data);return response.data;},// 获取评论详情\ngetComment:async commentId=>{const response=await apiClient.get(\"/posts/comments/\".concat(commentId,\"/\"));return response.data;},// 更新评论\nupdateComment:async(commentId,data)=>{const response=await apiClient.patch(\"/posts/comments/\".concat(commentId,\"/\"),data);return response.data;},// 删除评论\ndeleteComment:async commentId=>{await apiClient.delete(\"/posts/comments/\".concat(commentId,\"/\"));}};","map":{"version":3,"names":["apiClient","commentsApi","getComments","postId","response","get","concat","data","results","createComment","post","getComment","commentId","updateComment","patch","deleteComment","delete"],"sources":["D:/miko/frontend/src/api/comments.ts"],"sourcesContent":["import apiClient from './client';\r\nimport { Comment, CreateCommentRequest } from '../types/comment';\r\n\r\nexport const commentsApi = {\r\n  // 获取帖子的评论列表\r\n  getComments: async (postId: number): Promise<Comment[]> => {\r\n    const response = await apiClient.get(`/posts/posts/${postId}/comments/`);\r\n    return response.data.results || response.data; // 处理分页响应\r\n  },\r\n\r\n  // 创建评论\r\n  createComment: async (postId: number, data: CreateCommentRequest): Promise<Comment> => {\r\n    const response = await apiClient.post(`/posts/posts/${postId}/comments/`, data);\r\n    return response.data;\r\n  },\r\n\r\n  // 获取评论详情\r\n  getComment: async (commentId: number): Promise<Comment> => {\r\n    const response = await apiClient.get(`/posts/comments/${commentId}/`);\r\n    return response.data;\r\n  },\r\n\r\n  // 更新评论\r\n  updateComment: async (commentId: number, data: Partial<CreateCommentRequest>): Promise<Comment> => {\r\n    const response = await apiClient.patch(`/posts/comments/${commentId}/`, data);\r\n    return response.data;\r\n  },\r\n\r\n  // 删除评论\r\n  deleteComment: async (commentId: number): Promise<void> => {\r\n    await apiClient.delete(`/posts/comments/${commentId}/`);\r\n  },\r\n\r\n};\r\n"],"mappings":"AAAA,MAAO,CAAAA,SAAS,KAAM,UAAU,CAGhC,MAAO,MAAM,CAAAC,WAAW,CAAG,CACzB;AACAC,WAAW,CAAE,KAAO,CAAAC,MAAc,EAAyB,CACzD,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAJ,SAAS,CAACK,GAAG,iBAAAC,MAAA,CAAiBH,MAAM,cAAY,CAAC,CACxE,MAAO,CAAAC,QAAQ,CAACG,IAAI,CAACC,OAAO,EAAIJ,QAAQ,CAACG,IAAI,CAAE;AACjD,CAAC,CAED;AACAE,aAAa,CAAE,KAAAA,CAAON,MAAc,CAAEI,IAA0B,GAAuB,CACrF,KAAM,CAAAH,QAAQ,CAAG,KAAM,CAAAJ,SAAS,CAACU,IAAI,iBAAAJ,MAAA,CAAiBH,MAAM,eAAcI,IAAI,CAAC,CAC/E,MAAO,CAAAH,QAAQ,CAACG,IAAI,CACtB,CAAC,CAED;AACAI,UAAU,CAAE,KAAO,CAAAC,SAAiB,EAAuB,CACzD,KAAM,CAAAR,QAAQ,CAAG,KAAM,CAAAJ,SAAS,CAACK,GAAG,oBAAAC,MAAA,CAAoBM,SAAS,KAAG,CAAC,CACrE,MAAO,CAAAR,QAAQ,CAACG,IAAI,CACtB,CAAC,CAED;AACAM,aAAa,CAAE,KAAAA,CAAOD,SAAiB,CAAEL,IAAmC,GAAuB,CACjG,KAAM,CAAAH,QAAQ,CAAG,KAAM,CAAAJ,SAAS,CAACc,KAAK,oBAAAR,MAAA,CAAoBM,SAAS,MAAKL,IAAI,CAAC,CAC7E,MAAO,CAAAH,QAAQ,CAACG,IAAI,CACtB,CAAC,CAED;AACAQ,aAAa,CAAE,KAAO,CAAAH,SAAiB,EAAoB,CACzD,KAAM,CAAAZ,SAAS,CAACgB,MAAM,oBAAAV,MAAA,CAAoBM,SAAS,KAAG,CAAC,CACzD,CAEF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}