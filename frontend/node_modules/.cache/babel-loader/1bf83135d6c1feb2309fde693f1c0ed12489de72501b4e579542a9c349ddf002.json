{"ast":null,"code":"import apiClient from'./client';export const postsApi={// 获取帖子列表\ngetPosts:async function(){let filters=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const params=new URLSearchParams();if(filters.post_type)params.append('post_type',filters.post_type);if(filters.author_id)params.append('author_id',filters.author_id.toString());if(filters.search)params.append('search',filters.search);if(filters.ordering)params.append('ordering',filters.ordering);const response=await apiClient.get(\"/posts/posts/?\".concat(params.toString()));return response.data;},// 获取帖子详情\ngetPost:async postId=>{const response=await apiClient.get(\"/posts/posts/\".concat(postId,\"/\"));return response.data;},// 创建帖子\ncreatePost:async data=>{const formData=new FormData();formData.append('title',data.title);formData.append('content',data.content);formData.append('post_type',data.post_type);data.images.forEach((image,index)=>{formData.append(\"images\",image);});const response=await apiClient.post('/posts/posts/',formData,{headers:{'Content-Type':'multipart/form-data'}});return response.data;},// 更新帖子\nupdatePost:async(postId,data)=>{const response=await apiClient.patch(\"/posts/posts/\".concat(postId,\"/\"),data);return response.data;},// 删除帖子\ndeletePost:async postId=>{await apiClient.delete(\"/posts/posts/\".concat(postId,\"/\"));},// 点赞/取消点赞帖子\ntoggleLike:async postId=>{const response=await apiClient.post(\"/posts/posts/\".concat(postId,\"/like/\"));return response.data;},// 收藏/取消收藏帖子\ntoggleBookmark:async postId=>{const response=await apiClient.post(\"/posts/posts/\".concat(postId,\"/bookmark/\"));return response.data;},// 分享帖子\nsharePost:async(postId,platform)=>{await apiClient.post(\"/posts/posts/\".concat(postId,\"/share/\"),{platform});},// 举报帖子\nreportPost:async(postId,reportType,reason)=>{await apiClient.post(\"/posts/posts/\".concat(postId,\"/report/\"),{report_type:reportType,reason});},// 获取热门帖子\ngetTrendingPosts:async()=>{const response=await apiClient.get('/posts/posts/trending/');return response.data;},// 获取推荐帖子\ngetRecommendedPosts:async()=>{const response=await apiClient.get('/posts/posts/recommended/');return response.data;}};","map":{"version":3,"names":["apiClient","postsApi","getPosts","filters","arguments","length","undefined","params","URLSearchParams","post_type","append","author_id","toString","search","ordering","response","get","concat","data","getPost","postId","createPost","formData","FormData","title","content","images","forEach","image","index","post","headers","updatePost","patch","deletePost","delete","toggleLike","toggleBookmark","sharePost","platform","reportPost","reportType","reason","report_type","getTrendingPosts","getRecommendedPosts"],"sources":["D:/miko/frontend/src/api/posts.ts"],"sourcesContent":["import apiClient from './client';\r\nimport { Post, CreatePostRequest, PostFilters } from '../types/post';\r\n\r\nexport const postsApi = {\r\n  // 获取帖子列表\r\n  getPosts: async (filters: PostFilters = {}): Promise<{ results: Post[]; count: number; next: string | null }> => {\r\n    const params = new URLSearchParams();\r\n    \r\n    if (filters.post_type) params.append('post_type', filters.post_type);\r\n    if (filters.author_id) params.append('author_id', filters.author_id.toString());\r\n    if (filters.search) params.append('search', filters.search);\r\n    if (filters.ordering) params.append('ordering', filters.ordering);\r\n    \r\n    const response = await apiClient.get(`/posts/posts/?${params.toString()}`);\r\n    return response.data;\r\n  },\r\n\r\n  // 获取帖子详情\r\n  getPost: async (postId: number): Promise<Post> => {\r\n    const response = await apiClient.get(`/posts/posts/${postId}/`);\r\n    return response.data;\r\n  },\r\n\r\n  // 创建帖子\r\n  createPost: async (data: CreatePostRequest): Promise<Post> => {\r\n    const formData = new FormData();\r\n    formData.append('title', data.title);\r\n    formData.append('content', data.content);\r\n    formData.append('post_type', data.post_type);\r\n    \r\n    data.images.forEach((image, index) => {\r\n      formData.append(`images`, image);\r\n    });\r\n    \r\n    const response = await apiClient.post('/posts/posts/', formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n    return response.data;\r\n  },\r\n\r\n  // 更新帖子\r\n  updatePost: async (postId: number, data: Partial<CreatePostRequest>): Promise<Post> => {\r\n    const response = await apiClient.patch(`/posts/posts/${postId}/`, data);\r\n    return response.data;\r\n  },\r\n\r\n  // 删除帖子\r\n  deletePost: async (postId: number): Promise<void> => {\r\n    await apiClient.delete(`/posts/posts/${postId}/`);\r\n  },\r\n\r\n  // 点赞/取消点赞帖子\r\n  toggleLike: async (postId: number): Promise<{ status: string; likes_count: number }> => {\r\n    const response = await apiClient.post(`/posts/posts/${postId}/like/`);\r\n    return response.data;\r\n  },\r\n\r\n  // 收藏/取消收藏帖子\r\n  toggleBookmark: async (postId: number): Promise<{ status: string; bookmarks_count: number }> => {\r\n    const response = await apiClient.post(`/posts/posts/${postId}/bookmark/`);\r\n    return response.data;\r\n  },\r\n\r\n  // 分享帖子\r\n  sharePost: async (postId: number, platform: string): Promise<void> => {\r\n    await apiClient.post(`/posts/posts/${postId}/share/`, { platform });\r\n  },\r\n\r\n  // 举报帖子\r\n  reportPost: async (postId: number, reportType: string, reason: string): Promise<void> => {\r\n    await apiClient.post(`/posts/posts/${postId}/report/`, {\r\n      report_type: reportType,\r\n      reason,\r\n    });\r\n  },\r\n\r\n  // 获取热门帖子\r\n  getTrendingPosts: async (): Promise<Post[]> => {\r\n    const response = await apiClient.get('/posts/posts/trending/');\r\n    return response.data;\r\n  },\r\n\r\n  // 获取推荐帖子\r\n  getRecommendedPosts: async (): Promise<Post[]> => {\r\n    const response = await apiClient.get('/posts/posts/recommended/');\r\n    return response.data;\r\n  },\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}