{"ast":null,"code":"import apiClient from './client';\nexport const commentsApi = {\n  // 获取帖子的评论列表\n  getComments: async postId => {\n    const response = await apiClient.get(`/posts/posts/${postId}/comments/`);\n    return response.data.results || response.data; // 处理分页响应\n  },\n  // 创建评论\n  createComment: async (postId, data) => {\n    const response = await apiClient.post(`/posts/posts/${postId}/comments/`, data);\n    return response.data;\n  },\n  // 获取评论详情\n  getComment: async commentId => {\n    const response = await apiClient.get(`/posts/comments/${commentId}/`);\n    return response.data;\n  },\n  // 更新评论\n  updateComment: async (commentId, data) => {\n    const response = await apiClient.patch(`/posts/comments/${commentId}/`, data);\n    return response.data;\n  },\n  // 删除评论\n  deleteComment: async commentId => {\n    await apiClient.delete(`/posts/comments/${commentId}/`);\n  }\n};","map":{"version":3,"names":["apiClient","commentsApi","getComments","postId","response","get","data","results","createComment","post","getComment","commentId","updateComment","patch","deleteComment","delete"],"sources":["D:/miko/frontend/src/api/comments.ts"],"sourcesContent":["import apiClient from './client';\r\nimport { Comment, CreateCommentRequest, CommentLikeResponse } from '../types/comment';\r\n\r\nexport const commentsApi = {\r\n  // 获取帖子的评论列表\r\n  getComments: async (postId: number): Promise<Comment[]> => {\r\n    const response = await apiClient.get(`/posts/posts/${postId}/comments/`);\r\n    return response.data.results || response.data; // 处理分页响应\r\n  },\r\n\r\n  // 创建评论\r\n  createComment: async (postId: number, data: CreateCommentRequest): Promise<Comment> => {\r\n    const response = await apiClient.post(`/posts/posts/${postId}/comments/`, data);\r\n    return response.data;\r\n  },\r\n\r\n  // 获取评论详情\r\n  getComment: async (commentId: number): Promise<Comment> => {\r\n    const response = await apiClient.get(`/posts/comments/${commentId}/`);\r\n    return response.data;\r\n  },\r\n\r\n  // 更新评论\r\n  updateComment: async (commentId: number, data: Partial<CreateCommentRequest>): Promise<Comment> => {\r\n    const response = await apiClient.patch(`/posts/comments/${commentId}/`, data);\r\n    return response.data;\r\n  },\r\n\r\n  // 删除评论\r\n  deleteComment: async (commentId: number): Promise<void> => {\r\n    await apiClient.delete(`/posts/comments/${commentId}/`);\r\n  },\r\n\r\n};\r\n"],"mappings":"AAAA,OAAOA,SAAS,MAAM,UAAU;AAGhC,OAAO,MAAMC,WAAW,GAAG;EACzB;EACAC,WAAW,EAAE,MAAOC,MAAc,IAAyB;IACzD,MAAMC,QAAQ,GAAG,MAAMJ,SAAS,CAACK,GAAG,CAAC,gBAAgBF,MAAM,YAAY,CAAC;IACxE,OAAOC,QAAQ,CAACE,IAAI,CAACC,OAAO,IAAIH,QAAQ,CAACE,IAAI,CAAC,CAAC;EACjD,CAAC;EAED;EACAE,aAAa,EAAE,MAAAA,CAAOL,MAAc,EAAEG,IAA0B,KAAuB;IACrF,MAAMF,QAAQ,GAAG,MAAMJ,SAAS,CAACS,IAAI,CAAC,gBAAgBN,MAAM,YAAY,EAAEG,IAAI,CAAC;IAC/E,OAAOF,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACAI,UAAU,EAAE,MAAOC,SAAiB,IAAuB;IACzD,MAAMP,QAAQ,GAAG,MAAMJ,SAAS,CAACK,GAAG,CAAC,mBAAmBM,SAAS,GAAG,CAAC;IACrE,OAAOP,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACAM,aAAa,EAAE,MAAAA,CAAOD,SAAiB,EAAEL,IAAmC,KAAuB;IACjG,MAAMF,QAAQ,GAAG,MAAMJ,SAAS,CAACa,KAAK,CAAC,mBAAmBF,SAAS,GAAG,EAAEL,IAAI,CAAC;IAC7E,OAAOF,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACAQ,aAAa,EAAE,MAAOH,SAAiB,IAAoB;IACzD,MAAMX,SAAS,CAACe,MAAM,CAAC,mBAAmBJ,SAAS,GAAG,CAAC;EACzD;AAEF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}