{"ast":null,"code":"import apiClient from'./client';export const messagesApi={// 获取对话列表\ngetConversations:async()=>{const response=await apiClient.get('/messages/conversations/');return response.data;},// 获取对话详情\ngetConversation:async conversationId=>{const response=await apiClient.get(\"/messages/conversations/\".concat(conversationId,\"/\"));return response.data;},// 获取对话中的消息\ngetMessages:async conversationId=>{const response=await apiClient.get(\"/messages/conversations/\".concat(conversationId,\"/messages/\"));return response.data;},// 发送消息\nsendMessage:async(conversationId,content)=>{const response=await apiClient.post(\"/messages/conversations/\".concat(conversationId,\"/messages/\"),{content});return response.data;},// 开始对话\nstartConversation:async data=>{const response=await apiClient.post('/messages/start-conversation/',data);return response.data;},// 标记消息为已读\nmarkMessagesRead:async conversationId=>{await apiClient.post(\"/messages/conversations/\".concat(conversationId,\"/mark-read/\"));}};","map":{"version":3,"names":["apiClient","messagesApi","getConversations","response","get","data","getConversation","conversationId","concat","getMessages","sendMessage","content","post","startConversation","markMessagesRead"],"sources":["D:/miko/frontend/src/api/messages.ts"],"sourcesContent":["import apiClient from './client';\r\n\r\nexport interface Conversation {\r\n  id: number;\r\n  participants: Array<{\r\n    id: number;\r\n    nickname: string;\r\n    avatar_url: string;\r\n  }>;\r\n  last_message?: {\r\n    id: number;\r\n    sender: {\r\n      id: number;\r\n      nickname: string;\r\n      avatar_url: string;\r\n    };\r\n    content: string;\r\n    is_read: boolean;\r\n    created_at: string;\r\n  };\r\n  other_participant?: {\r\n    id: number;\r\n    nickname: string;\r\n    avatar_url: string;\r\n  };\r\n  unread_count: number;\r\n  created_at: string;\r\n  updated_at: string;\r\n}\r\n\r\nexport interface Message {\r\n  id: number;\r\n  sender: {\r\n    id: number;\r\n    nickname: string;\r\n    avatar_url: string;\r\n  };\r\n  content: string;\r\n  is_read: boolean;\r\n  created_at: string;\r\n}\r\n\r\nexport interface StartConversationRequest {\r\n  user_id: number;\r\n}\r\n\r\nexport const messagesApi = {\r\n  // 获取对话列表\r\n  getConversations: async (): Promise<{ results: Conversation[]; count: number }> => {\r\n    const response = await apiClient.get('/messages/conversations/');\r\n    return response.data;\r\n  },\r\n\r\n  // 获取对话详情\r\n  getConversation: async (conversationId: number): Promise<Conversation> => {\r\n    const response = await apiClient.get(`/messages/conversations/${conversationId}/`);\r\n    return response.data;\r\n  },\r\n\r\n  // 获取对话中的消息\r\n  getMessages: async (conversationId: number): Promise<{ results: Message[]; count: number }> => {\r\n    const response = await apiClient.get(`/messages/conversations/${conversationId}/messages/`);\r\n    return response.data;\r\n  },\r\n\r\n  // 发送消息\r\n  sendMessage: async (conversationId: number, content: string): Promise<Message> => {\r\n    const response = await apiClient.post(`/messages/conversations/${conversationId}/messages/`, {\r\n      content,\r\n    });\r\n    return response.data;\r\n  },\r\n\r\n  // 开始对话\r\n  startConversation: async (data: StartConversationRequest): Promise<Conversation> => {\r\n    const response = await apiClient.post('/messages/start-conversation/', data);\r\n    return response.data;\r\n  },\r\n\r\n  // 标记消息为已读\r\n  markMessagesRead: async (conversationId: number): Promise<void> => {\r\n    await apiClient.post(`/messages/conversations/${conversationId}/mark-read/`);\r\n  },\r\n};\r\n"],"mappings":"AAAA,MAAO,CAAAA,SAAS,KAAM,UAAU,CA8ChC,MAAO,MAAM,CAAAC,WAAW,CAAG,CACzB;AACAC,gBAAgB,CAAE,KAAAA,CAAA,GAAiE,CACjF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAH,SAAS,CAACI,GAAG,CAAC,0BAA0B,CAAC,CAChE,MAAO,CAAAD,QAAQ,CAACE,IAAI,CACtB,CAAC,CAED;AACAC,eAAe,CAAE,KAAO,CAAAC,cAAsB,EAA4B,CACxE,KAAM,CAAAJ,QAAQ,CAAG,KAAM,CAAAH,SAAS,CAACI,GAAG,4BAAAI,MAAA,CAA4BD,cAAc,KAAG,CAAC,CAClF,MAAO,CAAAJ,QAAQ,CAACE,IAAI,CACtB,CAAC,CAED;AACAI,WAAW,CAAE,KAAO,CAAAF,cAAsB,EAAqD,CAC7F,KAAM,CAAAJ,QAAQ,CAAG,KAAM,CAAAH,SAAS,CAACI,GAAG,4BAAAI,MAAA,CAA4BD,cAAc,cAAY,CAAC,CAC3F,MAAO,CAAAJ,QAAQ,CAACE,IAAI,CACtB,CAAC,CAED;AACAK,WAAW,CAAE,KAAAA,CAAOH,cAAsB,CAAEI,OAAe,GAAuB,CAChF,KAAM,CAAAR,QAAQ,CAAG,KAAM,CAAAH,SAAS,CAACY,IAAI,4BAAAJ,MAAA,CAA4BD,cAAc,eAAc,CAC3FI,OACF,CAAC,CAAC,CACF,MAAO,CAAAR,QAAQ,CAACE,IAAI,CACtB,CAAC,CAED;AACAQ,iBAAiB,CAAE,KAAO,CAAAR,IAA8B,EAA4B,CAClF,KAAM,CAAAF,QAAQ,CAAG,KAAM,CAAAH,SAAS,CAACY,IAAI,CAAC,+BAA+B,CAAEP,IAAI,CAAC,CAC5E,MAAO,CAAAF,QAAQ,CAACE,IAAI,CACtB,CAAC,CAED;AACAS,gBAAgB,CAAE,KAAO,CAAAP,cAAsB,EAAoB,CACjE,KAAM,CAAAP,SAAS,CAACY,IAAI,4BAAAJ,MAAA,CAA4BD,cAAc,eAAa,CAAC,CAC9E,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}